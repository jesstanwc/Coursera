## Put comments here that give an overall description of what your
## functions do

## Write a short comment describing this function

makeCacheMatrix <- function(x = matrix()) {  ## define x as a square invertible matrix
        inv <- NULL        
        set <- function(y) { ##set the matrix
                x <<- y
                inv <<- NULL 
        }
        get <- function() x ##get the matrix
        setinv <- function(inverse) inv <<- inverse ##set the inverse of the matrix
        getinv <- function() inv ##get the inverse of the matrix
        list(set=set, get=get, setinv=setinv, getinv=getinv) ##used as the input to cacheSolve()
}


## Write a short comment describing this function
cachesolve <- function(x, ...)  {
        ## Return a matrix that is the inverse of 'x'
        inv <- x$getinv()
        ## if the inverse exist in the cache then get the inverse from the cache
        if(!is.null(inv)) {
                message("getting cached data")
                return(inv)
        }
        ## else calculate the cache
        m.data <- x$get()
        inv <- solve(m.data, ...)
        ## set the value of the inverse in the cache
        x$setinv(inv)
        inv
 }
